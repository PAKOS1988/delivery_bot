from botcreat import dp
from aiogram import executor
import keyboard
import states
import DB

@dp.message_handler(commands=['start'])
async def start_cmd(message):
    start_txt=f'{message.from_user.first_name}üëã\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ü§ñ –æ—Ç–¥–µ–ª –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ DokOutsource'
    start_reg=f'–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ—Å—Ç—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π\n\n–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—èüëá:'
    user_id=message.from_user.id
    user_name=message.from_user.first_name
    print(user_id, user_name)
    if user_id==1268659822:
        await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —Ö–æ–∑—è–∏–Ω. –ß—Ç–æ –≤–∞—Å –ø—Ä–∏–≤–µ–ª–æ –≤ –±–æ—Ç?', reply_markup = keyboard.administration())
        await states.Admin.get_status.set()
    else:
        await message.answer(start_txt)
        await message.answer(start_reg, reply_markup=keyboard.get_name_kb())
        await states.Reg.get_name.set()

@dp.message_handler(state=states.Admin.get_status)
async def get_name(message, state=states.Admin.get_status):
    if message.text=='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', reply_markup=keyboard.ReplyKeyboardRemove())
        await states.Add.get_name.set()
    elif message.text == '–ó–∞–π—Ç–∏ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç':
        start_txt = f'{message.from_user.first_name}üëã\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ü§ñ –æ—Ç–¥–µ–ª –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ DokOutsource'
        start_reg = f'–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ—Å—Ç—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π\n\n–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—èüëá:'
        await message.answer(start_txt)
        await message.answer(start_reg, reply_markup=keyboard.get_name_kb())
        await states.Reg.get_name.set()
@dp.message_handler(state=states.Add.get_name)
async def prod_name(message, state=states.Add.get_name):
    name=message.text
    print(name)
    await state.update_data(prod_name=name)
    await message.answer(f'–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å {name}:>>')
    await states.Add.get_price.set()
@dp.message_handler(state=states.Add.get_price)
async def prod_price(message, state=states.Add.get_price):
    price=float(message.text)
    print(price)
    await state.update_data(prod_price=price)
    await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:>>')
    await states.Add.get_info.set()

@dp.message_handler(state=states.Add.get_info)
async def prod_price(message, state=states.Add.get_info):
    info=message.text
    print(info)
    await state.update_data(prod_info=info)
    await message.answer('–¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ç–æ–≤–∞—Ä–∞:>>')
    await states.Add.get_photo.set()

@dp.message_handler(content_types=['photo'],state=states.Add.get_photo)
async def prod_photo(message, state=states.Add.get_photo):
    photo_id=message.photo[-1].file_id
    print(photo_id)
    await state.update_data(prod_photo=photo_id)
    all_info = await state.get_data()
    id=DB.get_products_id()
    id_prod=len(id)+1
    print(id)
    name = all_info.get('prod_name')
    price = all_info.get('prod_price')
    print(price)
    info = all_info.get('prod_info')
    photo = all_info.get('prod_photo')
    DB.add_product(id_prod, name, price, info, photo)
    print(DB.get_products_all())
    await message.answer('–û—Ç–ª–∏—á–Ω–æ! –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup = keyboard.administration())
    await state.finish()
    await states.Admin.get_status.set()
@dp.message_handler(state=states.Reg.get_name)
async def get_name(message, state=states.Reg.get_name):
    if message.text=='–í–∑—è—Ç—å –∏–∑ –¢–ì –∞–∫–∫–∞—É–Ω—Ç–∞':
        name=message.from_user.first_name
        print(name)
        await state.update_data(user_name=name)
        await message.answer(f'–û—Ç–ª–∏—á–Ω–æ! {name}üëç, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ωüëá:', reply_markup=keyboard.phone_number_kb())
        await states.Reg.get_contact.set()
    elif message.text != '–í–∑—è—Ç—å –∏–∑ –¢–ì –∞–∫–∫–∞—É–Ω—Ç–∞' and message.text.isdigit() == False:
        print(message)
        name=message.text
        print(name)
        await state.update_data(user_name=name)
        await message.answer(f'–û—Ç–ª–∏—á–Ω–æ! {name}üëç, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ωüëá:',
                             reply_markup=keyboard.phone_number_kb())
        await states.Reg.get_contact.set()
@dp.message_handler(state=states.Reg.get_contact, content_types=['contact'])
async def get_contact(message, state=states.Reg.get_contact):
        phone_number = message.contact.phone_number
        print(F'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}')
        name=await state.get_data()
        await state.update_data(user_contact=phone_number)
        await message.answer(f'–û—Ç–ª–∏—á–Ω–æ! {name["user_name"]}üëç, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –í–∞—à—É –ª–æ–∫–∞—Ü–∏—éüëá:', reply_markup=keyboard.location_kb())
        await states.Reg.get_location.set()

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç—Ç–∞–ø–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
@dp.message_handler(state=states.Reg.get_location, content_types=['location'])
async def get_location(message, state=states.Reg.get_location):
        location = (message.location.longitude, message.location.latitude)
        print(f'–õ–æ–∫–∞—Ü–∏—è:{location}')
        name = await state.get_data()
        await state.update_data(user_location=location)
        await message.answer(f'–û—Ç–ª–∏—á–Ω–æ! {name["user_name"]}üëç, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –í–∞—à –ø–æ–ªüëá:', reply_markup = keyboard.gender_kb())
        await states.Reg.get_gender.set()

@dp.message_handler(state=states.Reg.get_gender, content_types=['text'])
async def get_gender(message, state=states.Reg.get_gender):
    name = await state.get_data()
    if message.text=='–ú—É–∂—Å–∫–æ–π' or message.text=='–ñ–µ–Ω—Å–∫–∏–π':
        gender=message.text
        print(f'–ü–æ–ª:{gender}')
        await state.update_data(user_gender=gender)
        await message.answer(f'–û—Ç–ª–∏—á–Ω–æ! {name["user_name"]}üëç\n–í—ã –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–ºüéâüéâüéâ', reply_markup=keyboard.products_kb())
        await states.Choice.get_product.set()
    else:
        await message.answer(f'–û–π! {name["user_name"]}\n–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –≤—ã–±–æ—Ä–∞!', reply_markup=keyboard.gender_kb())
        await states.Reg.get_gender.set()
    all_info = await state.get_data()
    name = all_info.get('user_name')
    ph_num = all_info.get('user_contact')
    locat = all_info.get('user_location')
    gender = all_info.get('user_gender')
    id = message.from_user.id
    DB.add_user(id,name,ph_num,locat[0],locat[1],gender)
    print(DB.get_user())

executor.start_polling(dp)

